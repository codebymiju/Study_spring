<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- HikariCP 라이브러리 사용을 위한 설정 -->
	<!-- 1. HikariCP 를 활용한 DB 접속 정보 설정을 위해 HikariConfig 객체 설정(JDBC 기본 설정) -->
	<!-- com.zaxxer.hikari 패키지의 HikariConfig 클래스 지정(틀렸을 경우 오류 발생) -->
	<!-- bean 태그 사이에는 property 태그를 통해 커넥션풀 관련 정보 설정 -->
<!-- 	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig"> -->
<!-- 		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property> -->
<!-- 		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/mvc_board5"></property> -->
<!-- 		<property name="username" value="root"></property> -->
<!-- 		<property name="password" value="1234"></property> -->
<!-- 	</bean>	 -->
	<!-- SQL 로그를 위한 log4jdbc 라이브러리 관련 DBCP 정보 변경(driverClassName, jdbcUrl) -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="jdbcUrl" value="jdbc:log4jdbc:mysql://localhost:3306/mvc_board5"></property>
		<property name="username" value="root"></property>
		<property name="password" value="1234"></property>
	</bean>	
	
	<!-- 2. HikariCP 의 DataSource 객체(HikariDataSource) 생성을 위해 HikariConfig 객체 전달 -->
	<!-- destroy-method="close" 속성은 DB 작업 종료 후 자동으로 호출할 메서드(close())명 지정 -->
	<!-- 태그 사이에 constructor-arg 태그 ref 속성값으로 1번의 id 속성값 지정 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>
	
	<!-- 3. Connection 객체 생성 및 쿼리 전달, 결과 리턴 등의 작업 수행할 SQLSessionFactory 객체 설정 -->
	<!-- MyBatis - Spring 연결 담당하며, 내부적으로 SQLSession 객체를 통해 작업 수행 -->	
	<!-- 주의! 이전에 이미 DataSource 객체 설정이 완료되어 있어야 함(ref="dataSource" 사용 위해) -->
	<!-- 주의! configLocation, mapperLocations 항목을 위해 각각의 파일이 생성되어 있어야 함 -->
	<!-- 각 xml 파일들은 src/main/resources 를 루트로 사용(주의! 폴더가 아닌 패키지로 생성) -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:/**/*Mapper.xml"></property>
	</bean>
	
	<!-- MyBatis 연동에 사용될 객체들의 패키지 위치 지정(기본 루트 패키지 지정) -->
	<mybatis-spring:scan base-package="com.itwillbs.mvc_board"/>
</beans>














